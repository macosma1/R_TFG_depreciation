#get threshold values for outliers
list_quantiles <- tapply(datos$price, datos$years, quantile)
Q1s <- sapply(1:length(AGE), function(i) list_quantiles[[i]][2])
Q3s <- sapply(1:length(AGE), function(i) list_quantiles[[i]][4])
IQRs <- tapply(datos$price, datos$years, IQR)
minis <- sapply(1:length(AGE), function(i) list_quantiles[[i]][1])
maxis <- sapply(1:length(AGE), function(i) list_quantiles[[i]][5])
Mes <- sapply(1:length(AGE), function(i) list_quantiles[[i]][3]) #median
MAD <- tapply(datos$price, datos$years, mad)
#Intercuartil
Lowers <- Q1s - 1.5*IQRs #valor atípico leve dista --> q < Q1 – 1,5 · IQR o bien q > Q3 + 1,5 · IQR
Uppers <- Q3s + 1.5*IQRs
#Hampel filter -->MAD
lower_bound <- Mes - 3 * MAD
Upper_bound <- Mes + 3 * MAD
#for to collect the data that pass the filter
list_year <- split(datos, datos$years)
data_no_outlier <- NULL
data_no_outlier_Mad <- NULL
for (i in 1:length(AGE)){
out <- subset(list_year[[i]], list_year[[i]]$price > Lowers[i] & list_year[[i]]$price < Uppers[i]) #Intercuartile range
data_no_outlier <- rbind(data_no_outlier, out)
#data_no_outlier <- rbind(out)
outMad <- subset(list_year[[i]], list_year[[i]]$price > lower_bound[i] & list_year[[i]]$price < Upper_bound[i]) #Hampel filter -->MAD
data_no_outlier_Mad<- rbind(data_no_outlier_Mad, outMad)
}
#dim(data_no_outlier) ## [1] 4297    2
#dim(data_no_outlier_Mad) ## [1] 4188    2
#------------------------------------------------------------------------------------------
#elimino
rm(AGE, i, IQRs, lower_bound, Lowers, MAD, maxis, Mes, minis, Q1s, Q3s, Upper_bound, Uppers, out, outMad, list_quantiles, list_year)
#---------------------------------------------------------------------------------------------------------------------------------------------------
list_marca <- data_no_outlier_Mad[2]
data_no_outlier_Mad <- data_no_outlier_Mad %>% mutate(list_marca = ifelse(brand == "Est", "Otro", brand))
data_no_outlier_Mad <- data_no_outlier_Mad [, c ("name", "list_marca", "country", "city", "power", "price", "km", "year", "years", "years.category")]
colnames(data_no_outlier_Mad)[2] <- "brand"
rm(list_marca)
View(data_no_outlier_Mad)
#----------------------------------------------------------------filtro datos segun una condicion y almaceno valores en listas-------------------------------------------------------------------------------
#agrupo por paises sin hacer filtro
df_brand <- data_no_outlier_Mad %>% group_by(brand) %>%
summarise( n=n(), mean_year = mean(year), mean_years= mean(years), mean_price = ceiling(mean(km)), median_price=median(km), variance_price = var(km), sd_price = sd(km)) %>% arrange(n)
df_country <- data_no_outlier_Mad %>% group_by(country) %>%
summarise( n=n(), mean_year = ceiling(mean(year)), mean_years= ceiling(mean(years)), mean_price = ceiling(mean(km)), median_price=median(km), variance_price = var(km), sd_price = sd(km)) %>% arrange(n)
#calculo las variables, elimina aquellas que no cumplan condiciones propuestas, como el no tener mas de dos valores por marca, por pais,
# uno agrupa por paises y otro por marcas y dice cuanto hay por cada uno, ademas saca la media de km y la suma total
df_country <- data_no_outlier_Mad %>% group_by(country) %>%
summarise( n=n(), mean_year = ceiling(mean(year)), mean_years= ceiling(mean(years)), mean_price = ceiling(mean(km)), median_price=median(km), variance_price = var(km), sd_price = sd(km)) %>%
filter(n>2) %>% arrange(n)
df_brand <- data_no_outlier_Mad %>% group_by(brand) %>%
summarise( n=n(), mean_year = mean(year), mean_years= mean(years), mean_price = ceiling(mean(km)), median_price=median(km), variance_price = var(km), sd_price = sd(km)) %>% filter(n>2) %>% arrange(n)
#agrupa en un vector aquellos paises que tengan mas de dos cabezas tractoras y agrupa en un vector aquellas marcas que tengan mas de dos cabezas tractoras
countries <- as.vector(data.frame(t(df_country[,1])))
brands <- as.vector(data.frame(t(df_brand[,1])))
#en data_no_outlier_Mad solo mantendremos los valores que cumplan las dos condiciones anteriormente planteadas... y veo las diferencia de como cambian las dimensiones
#dim(data_no_outlier_Mad) # 4188 10
#data_no_outlier_Mad <- filter(data_no_outlier_Mad, country %in% countries [[1]], brand %in% brands [[1]])  #vector no es transpuesto
data_no_outlier_Mad <- filter(data_no_outlier_Mad, country %in% t(countries), brand %in% t(brands))  #vector transpuesto
#dim(data_no_outlier_Mad) # 4173 10
#summary as a dataframe of power, country, years and brand
resume07<- rbind(describe(data_no_outlier_Mad$power), describe(data_no_outlier_Mad$price), describe(data_no_outlier_Mad$km), describe(data_no_outlier_Mad$years))
rownames(resume07) <- c("Power", "Price", "Km", "Year" )
#separo en una lista segun power, country, years y brand
list_power <- split(data_no_outlier_Mad, data_no_outlier_Mad$power)
list_country <- split(data_no_outlier_Mad, data_no_outlier_Mad$country)
list_years <- split(data_no_outlier_Mad, data_no_outlier_Mad$years)
list_brand <- split(data_no_outlier_Mad, data_no_outlier_Mad$brand)
#del cuadro que esta, para el analisis, sacamos un resumen de cada variable y la almaceno en la lista_resumen:
df_year <- data_no_outlier_Mad %>% group_by(years) %>% summarise( n=n(), mean_price = ceiling(mean(price)))
yearss = df_year[,1:2]
brands = df_brand[,1:2]
countries = df_country[,1:2]
years.categories <- data_no_outlier_Mad %>% group_by(years.category) %>% summarise( n=n()) %>% arrange(n)
lista_resumen <- list(yearss, brands, countries, years.categories) #accedo a este lista_resumen[[2]]
#----------------------------------------------------------------
colnames(countries) <- c("País", "Datos")
colnames(yearss) <- c("Edad", "Datos")
colnames(brands) <- c("Marca", "Datos")
colnames(countries) <- c("País", "Datos")
colnames(yearss) <- c("Edad", "Datos")
#```{r eval=TRUE, echo=FALSE, out.width='75%', fig.align='center', fig.cap = "\\label{Mod1} Intervalo de confianza de todos los modelos de los diferentes modelos de regresión lineal."} no me funciona el label
#lineal
#calculo manual, este da resultados con mas decimales
# b_lineal = cov(data_no_outlier_Mad$years, data_no_outlier_Mad$price) / (resume07 [4,4])^2
# a_lineal = resume07 [2,3] - (resume07 [4,3] * b_lineal)
# r_2_lineal = (cov(data_no_outlier_Mad$years, data_no_outlier_Mad$price) / ((resume07 [4,4]) * (resume07 [2,4])))^2
# r_2_lineal = (cor(data_no_outlier_Mad$years, data_no_outlier_Mad$price))^2 #da igual, pero es otra forma
# coef_depre_lineal = b_lineal / a_lineal
# data_no_outlier_Mad <- data_no_outlier_Mad %>% mutate(y_linel = a_lineal + b_lineal * data_no_outlier_Mad$years) #creamos la Y
#calculo con funcionn lm
reg_years_price_lineal = lm(price ~ years, data = data_no_outlier_Mad) #nos da el a y el b
data_no_outlier_Mad <- data_no_outlier_Mad %>% mutate(y_lineal = fitted(reg_years_price_lineal)) #creamos la Y , el fitted no da la Y calculada del modelo
summary(reg_years_price_lineal)
#confint(reg_years_price_lineal) #saco intervalo de confianza #resultado de arriba nos dice que, con una confianza del 95%, la pendiente se encuentra entre  -2455.887 y -2310.062.
#residuals(reg_years_price_lineal) #saco los valores residuales
lineal_years_price_coeff_beta <- reg_years_price_lineal$coefficients
lineal_years_price_coeff_depre <- round(lineal_years_price_coeff_beta[2]/lineal_years_price_coeff_beta[1], digits = 4)
lineal_years_price_coeff_R <- summary(reg_years_price_lineal)$r.square
#lineal_years_price_coeff_R <- summary(reg_years_price_lineal)$adj.r.square #para el R ajustado
#el apa model no va no se pq
# model <- lm(price ~ years, data = data_no_outlier_Mad)
#apaTables::apa.reg.table(model)
# --------------------------------------------------------------------------------------------------------------------------------------------
# #exp
#manual
# b_exp = cov(data_no_outlier_Mad$years, log(data_no_outlier_Mad$price)) / (resume07 [4,4])^2
# a_exp = mean(log(data_no_outlier_Mad$price)) - (resume07 [4,3] * b_exp)
# a_exp = exp(a_exp)
# r_2_exp = (cov(data_no_outlier_Mad$years, log(data_no_outlier_Mad$price)) / (sd(log(data_no_outlier_Mad$price)) * (resume07 [4,4])))^2
# r_2_exp = (cor(data_no_outlier_Mad$years, log(data_no_outlier_Mad$price)))^2 #no se pq me da diferente a lo que da en el excel
# coef_depre_exp = exp(b_exp)
#con formula
reg_years_price_exp = lm(log(price) ~ years, data = data_no_outlier_Mad) #nos da el a y el b
data_no_outlier_Mad <- data_no_outlier_Mad %>% mutate(y_exp = exp(fitted(reg_years_price_exp))) #creamos la Y , el fitted no da la Y calculada del modelo
summary(reg_years_price_exp)
#confint(reg_years_price_exp) #saco intervalo de confianza.
#residuals(reg_years_price_exp) #saco los valores residuales
exp_years_price_coeff_beta <- reg_years_price_exp$coefficients
exp_years_price_coeff_depre <- round(exp(exp_years_price_coeff_beta[2]), digits =4)
exp_years_price_coeff_R <- summary(reg_years_price_exp)$r.square
#exp_years_price_coeff_R <- summary(reg_years_price_exp)$adj.r.square #para el R ajustado
#--------------------------------------------------------------------------------------------------------------------------------------------
#power
#manual
# b_power = cov(log(data_no_outlier_Mad$years), log(data_no_outlier_Mad$price)) / (sd(log(data_no_outlier_Mad$years)))^2
# a_power = mean(log(data_no_outlier_Mad$price)) - (mean(log(data_no_outlier_Mad$years)) * b_power)
# a_power = exp(a_power)
# r_2_power = (cov(log(data_no_outlier_Mad$years), log(data_no_outlier_Mad$price)) / (sd(log(data_no_outlier_Mad$years) * sd(log(data_no_outlier_Mad$price)))))^2
# r_2_power = (cor(log(data_no_outlier_Mad$years), log(data_no_outlier_Mad$price)))^2 #no se pq me da diferente a lo que da en el excel
# coef_depre_power = b_power
#con formula
reg_years_price_power = lm(log(price) ~ log(years), data = data_no_outlier_Mad) #nos da el a y el b
data_no_outlier_Mad <- data_no_outlier_Mad %>% mutate(y_power = exp(fitted(reg_years_price_power))) #creamos la Y , el fitted no da la Y calculada del modelo
summary(reg_years_price_power)
#confint(reg_years_price_power) #saco intervalo de confianza.
#residuals(reg_years_price_power) #saco los valores residuales
power_years_price_coeff_beta <- reg_years_price_power$coefficients
power_years_price_coeff_depre <- round(power_years_price_coeff_beta[2], digits = 4)
power_years_price_coeff_R <- summary(reg_years_price_power)$r.square
#power_years_price_coeff_R <- summary(reg_years_price_power)$adj.r.square #para el R ajustado
#stargazer(reg_years_price_lineal, reg_years_price_exp, reg_years_price_power, type="text", df=FALSE) #coef de a le faltaria hacer el exp(a)
#https://www.jakeruss.com/cheatsheets/stargazer/
#https://rdrr.io/cran/stargazer/man/stargazer_stat_code_list.html  #stargazer: list of statistic codes
my_models <- list()
my_models[['reg_years_price_lineal']]   <- lm(price ~ years, data = data_no_outlier_Mad)
my_models[['reg_years_price_exp']]   <- lm(log(price) ~ years, data = data_no_outlier_Mad)
my_models[['reg_years_price_power']] <- lm(log(price) ~ log(years), data = data_no_outlier_Mad)
stargazer::stargazer(my_models, type = "text", column.labels = c("Model1", "Model2", "Model3"),  covariate.labels=c("Lineal(years)","Log(years)","Constante"), single.row = TRUE, df=FALSE, omit.stat=c("LL","adj.rsq"), no.space=FALSE, add.lines = list(c("Coeff depre", lineal_years_price_coeff_depre, exp_years_price_coeff_depre, power_years_price_coeff_depre)),
notes = c(" ---------------------------------------------","*** Significant at the 1 percent level.", "** Significant at the 5 percent level.", "* Significantat the 10 percent level."),
out="Modelos_regresion/Modelos_regresion.html")
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/Modelos_regresion.html")
#keep.stat="n", solo deja observaciones
#star.cutoffs = c(0.05, 0.01, 0.001)) # star.cutoffs = NULL by default
#df=FALSE hace que no salga el 4171 de valores que usa en el modelo del df
#title="Tabla 1. Diferentes modelos OLS",
#digits = 1 numeros de decimales de la tabla salvo los agregados
#saco intervalo de confianza de todos los modelos
confi <- list()
confi[['Lineal1']] <- c((confint(reg_years_price_lineal))[1,1], (confint(reg_years_price_lineal))[1,2])
confi[['Lineal2']] <- c((confint(reg_years_price_lineal))[2,1], (confint(reg_years_price_lineal))[2,2])
confi[['Exp1']] <- c((confint(reg_years_price_exp))[1,1], (confint(reg_years_price_exp))[1,2])
confi[['Exp2']] <- c((confint(reg_years_price_exp))[2,1], (confint(reg_years_price_exp))[2,2])
confi[['Power1']] <- c((confint(reg_years_price_power))[1,1], (confint(reg_years_price_power))[1,2])
confi[['Power2']] <- c((confint(reg_years_price_power))[2,1], (confint(reg_years_price_power))[2,2])
confi<- t(as.data.frame(confi))
colnames(confi) <- c("2.5%", "97.5%")
rownames(confi) <- c("Lineal- (Intercept)", "Lineal - years", "Exp - (Intercept)", "Exp - years", "Power - (Intercept)", "Power - years")
stargazer::stargazer(confi, type = "text", align = TRUE,  df=FALSE,   out="Modelos_regresion/confi.html")
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/confi.html")
# flip = TRUE,
#tidy(reg_years_price_lineal) #covariate.labels=c("", "2.5", "97.5","2.5", "97.5","2.5", "97.5"),
# tidy(summary(reg_years_price_lineal))
# augment(reg_years_price_lineal)
# glance(reg_years_price_lineal)
rm(lineal_years_price_coeff_beta, lineal_years_price_coeff_depre, lineal_years_price_coeff_R, exp_years_price_coeff_beta, exp_years_price_coeff_depre, exp_years_price_coeff_R, power_years_price_coeff_beta, power_years_price_coeff_depre, power_years_price_coeff_R)
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="y_lineal"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="y_exp"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="y_power"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("y_lineal", "y_exp", "y_power"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
plot2<-
{plot(data_no_outlier_Mad$years, data_no_outlier_Mad$price) #, main = "TITULO")
legend("topright", legend = c("lineal", "power", "semilog"), lty= c(2, 3, 4), lwd = 1, col = c("red", "blue", "green"))
lines(data_no_outlier_Mad$years, data_no_outlier_Mad$y_lineal , col = "red", linetype=2)
lines(data_no_outlier_Mad$years, data_no_outlier_Mad$y_exp , col = "blue", linetype=3)
lines(data_no_outlier_Mad$years, data_no_outlier_Mad$y_power , col = "green", linetype=4)}
plot2<-
{plot(data_no_outlier_Mad$years, data_no_outlier_Mad$price) #, main = "TITULO")
legend("topright", legend = c("lineal", "power", "semilog"), lty= c(2, 3, 4), lwd = 1, col = c("red", "blue", "green"))
lines(data_no_outlier_Mad$years, data_no_outlier_Mad$y_lineal , col = "red", linetype=2)
lines(data_no_outlier_Mad$years, data_no_outlier_Mad$y_exp , col = "blue", linetype=3)
lines(data_no_outlier_Mad$years, data_no_outlier_Mad$y_power , col = "green", linetype=4)}
#--------------------------------------------------------------------------------------------------------------------------------------------
levels <- c("DAF", "Iveco", "MAN", "Mercedes", "Otro", "Renault", "Scania", "Volvo")
data_no_outlier_Mad$brand_factor <- match(data_no_outlier_Mad$brand, levels)
attach(data_no_outlier_Mad)
scatterplot3d(x=years, y=brand_factor, z=price, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='years', ylab='brands', zlab='Price (€)')
#relation between price, years and km
my_models <- list()
my_models[['reg_years_price_lineal']]   <- lm(price ~ years * km, data = data_no_outlier_Mad)
my_models[['reg_years_price_exp']]   <- lm(log(price) ~ years * km, data = data_no_outlier_Mad)
my_models[['reg_years_price_power']] <- lm(log(price) ~ log(years) * log(km), data = data_no_outlier_Mad)
stargazer::stargazer(my_models, type = "text",single.row = TRUE, df=FALSE, omit.stat=c("LL","adj.rsq"), no.space=FALSE,
notes = c(" ---------------------------------------------","*** Significant at the 1 percent level.", "** Significant at the 5 percent level.", "* Significantat the 10 percent level."),
out="Modelos_regresion/Modelos_regresion_multi1.html")
#column.labels = c("Model1", "Model2", "Model3"),  covariate.labels=c("Lineal(years)","Log(years)","Constante"),
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/Modelos_regresion_multi1.html")
#relation between price, years and brand
my_models <- list()
my_models[['reg_years_price_lineal']]   <- lm(price ~ years * brand, data = data_no_outlier_Mad)
my_models[['reg_years_price_exp']]   <- lm(log(price) ~ years * brand, data = data_no_outlier_Mad)
my_models[['reg_years_price_power']] <- lm(log(price) ~ log(years) * brand, data = data_no_outlier_Mad)
stargazer::stargazer(my_models, type = "text", single.row = TRUE, df=FALSE, omit.stat=c("LL","adj.rsq"), no.space=FALSE,
notes = c(" ---------------------------------------------","*** Significant at the 1 percent level.", "** Significant at the 5 percent level.", "* Significantat the 10 percent level."),
out="Modelos_regresion/Modelos_regresion_multi2.html")
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/Modelos_regresion_multi2.html")
#relation between price, years, brand and km, esto vendría a ser lo que hago despues con el onehot-encoding
my_models <- list()
my_models[['reg_years_price_lineal']]   <- lm(price ~ years * km * brand, data = data_no_outlier_Mad)
my_models[['reg_years_price_exp']]   <- lm(log(price) ~ years * km * brand, data = data_no_outlier_Mad)
my_models[['reg_years_price_power']] <- lm(log(price) ~ log(years) * log(km) * brand, data = data_no_outlier_Mad)
stargazer::stargazer(my_models, type = "text", single.row = TRUE, df=FALSE, omit.stat=c("LL","adj.rsq"), no.space=FALSE,
notes = c(" ---------------------------------------------","*** Significant at the 1 percent level.", "** Significant at the 5 percent level.", "* Significantat the 10 percent level."),
out="Modelos_regresion/Modelos_regresion_multi3.html")
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/Modelos_regresion_multi3.html")
#https://www.statology.org/multiple-linear-regression-r/
sal <- data_no_outlier_Mad[,c(1, 6,7,9,14)]
library(GGally)
pairs(sal[,-1], pch = 18, col = "steelblue") #pairs() function to create a scatterplot of every possible pair of variables:
ggpairs(sal[,-1]) #create a similar plot that contains the actual linear correlation coefficients for each pair of variables
View(sal)
View(sal)
colnames(sal) <- c("Precio", "km", "Edad")
#https://www.statology.org/multiple-linear-regression-r/
sal <- data_no_outlier_Mad[,c(6,7,9)]
colnames(sal) <- c("Precio", "km", "Edad")
# pairs(sal[,-1], pch = 18, col = "steelblue") #pairs() function to create a scatterplot of every possible pair of variables:
ggpairs(sal) #create a similar plot that contains the actual linear correlation coefficients for each pair of variables
# library(data.table)
# library(mltools)
#solo las 8 marcas (para mostrar el resultado del one-hot encoding. --> no para todas las muestras)
sal <- brands[1]
View(sal)
View(data_no_outlier_Mad)
#%>%
#footnote(general="texto", number = c("Nota 1; ", "Nota 2;"),
#number_title = "Tipo 1:")
colnames(brands) <- c("brand", "n")
sal$brand <- as.factor(sal$brand)
# library(data.table)
# library(mltools)
#solo las 8 marcas (para mostrar el resultado del one-hot encoding. --> no para todas las muestras)
sal <- brands[1]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
library(data.table)
library(mltools)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("DAF", "Iveco", "MAN", "Mercedes", "Otro", "Renault", "Scania", "Volvo")
onehot
View(df_country)
colnames(countries) <- c("country", "n")
View(df_year)
colnames(yearss) <- c("years", "n")
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[,c(2)]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("DAF", "Iveco", "MAN", "Mercedes", "Otro", "Renault", "Scania", "Volvo")
sal <- cbind(data_no_outlier_Mad[,c(1,6,7,9)], onehot)
model1 <- lm(price ~ years*km*(Iveco+MAN+Mercedes+Otro+Renault+Scania+Volvo), sal[,c(-1)])
#onehot-encoding: si tienes n niveles (marcas) te aparecen n-1, cuando no aparece DAF es porque es la marca de referencia,#si todoas las binarias son cero, el modelo predice para DAF
summary(model1)
model1 <- lm(log(price) ~ years*km*(Iveco+MAN+Mercedes+Otro+Renault+Scania+Volvo), sal[,c(-1)])
summary(model1)
model1 <- lm(log(price) ~ log(years)*log(km)*(Iveco+MAN+Mercedes+Otro+Renault+Scania+Volvo), sal[,c(-1)])
summary(model1)
#https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
library(corrplot)
library(psych)
correlation <- round(cor(sal[,c(-1)]),3)
corrplot(correlation, method = 'number')
# corrplot.mixed(correlation)
# corrplot(correlation, method = 'circle', type = 'lower')
corrplot(correlation, method = 'pie', type = 'lower')
pairs.panels(sal[,c(-1)], pch=21)
round(cor(sal[,c(-1)]),3)
#relation between price, years, brand and km, esto vendría a ser lo que hago despues con el onehot-encoding
my_models <- list()
sal <- cbind(data_no_outlier_Mad[,c(1,6,7,9)], onehot) #sin DAF, ya que si todas las binarias son cero, el modelo predice para DAF
my_models[['reg_years_price_lineal']]   <- lm(price ~ years * km *(Iveco + MAN + Mercedes + Otro + Renault + Scania + Volvo), sal[,c(-1)])
my_models[['reg_years_price_exp']]   <- lm(log(price) ~ years * km * (Iveco + MAN + Mercedes + Otro + Renault + Scania + Volvo), sal[,c(-1)])
my_models[['reg_years_price_power']] <- lm(log(price) ~ log(years) * log(km) * (Iveco + MAN + Mercedes + Otro + Renault + Scania + Volvo), sal[,c(-1)])
stargazer::stargazer(my_models, type = "text", single.row = TRUE, df=FALSE, omit.stat=c("LL","adj.rsq"), no.space=FALSE,
notes = c(" ---------------------------------------------","*** Significant at the 1 percent level.", "** Significant at the 5 percent level.", "* Significantat the 10 percent level."),
out="Modelos_regresion/Modelos_regresion_multi4.html")
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/Modelos_regresion_multi4.html")
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="y_lineal"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="y_exp"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="y_power"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("y_lineal", "y_exp", "y_power"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
labs( x="Edad", y = "Precio (€)")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="y_lineal"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="y_exp"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="y_power"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("y_lin", "y_exp", "y_power"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
labs( x="Edad", y = "Precio (€)")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="y_lineal"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="y_exp"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="y_power"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("y_lineal", "y_exp", "y_power"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
labs( x="Edad", y = "Precio (€)")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="y_lin"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="y_exp"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="y_power"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("y_lin", "y_exp", "y_power"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
labs( x="Edad", y = "Precio (€)")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="Lineal"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="Exponencial"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="Potencial"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("€", "Exponencial", "Potencial"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
labs( x="Edad", y = "Precio (€)")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
#como comente arriba, este de abajo da diferente al de arriba, (uno lo calculo yo antes)
ggplot(data_no_outlier_Mad, aes(years)) + # basic graphical object
geom_point(aes(y = price)) +
geom_line(aes(y=y_lineal, colour="Lineal"),  linetype=2, size=1) + # first layer
geom_line(aes(y=y_exp, colour="Exponencial"),  linetype=3, size=1) + # second layer
geom_line(aes(y=y_power, colour="Potencial"),  linetype=4, size=1)+ # second layer
scale_color_manual("",
breaks =  c("Lineal", "Exponencial", "Potencial"),
values = c("red", "green", "blue"))+
#labs(title = "TITULO")+
labs( x="Edad", y = "Precio (€)")+
theme(plot.title = element_text(hjust = 0.5), legend.position = "top")
# ```{r eval=TRUE, echo=FALSE, fig.cap = "\\label{tabla_reg_1}}
### Modelo 1
reg_years_price_lineal = lm(price ~ years, data = data_no_outlier_Mad) #nos da el a y el b
summary(reg_years_price_lineal)
### Modelo 2
reg_years_price_exp = lm(log(price) ~ years, data = data_no_outlier_Mad) #nos da el a y el
summary(reg_years_price_exp)
### Modelo 3
reg_years_price_power = lm(log(price) ~ log(years), data = data_no_outlier_Mad) #nos da el a y el b
summary(reg_years_price_power)
# ```{r eval=TRUE, echo=FALSE, fig.cap = "\\label{tabla_reg_1}}
### Modelo 1
reg_years_price_lineal = lm(price ~ years, data = data_no_outlier_Mad) #nos da el a y el b
#tendencia que realmente sigue
ggplot( data = data_no_outlier_Mad,
mapping = aes( x= years,
y = price))+
geom_point()+
geom_smooth()
#grafico
boxplot(datos$price~datos$years,
xlab = "Años desde la primera matriculación",  ylab = "Precio (€)")
ggplot(data_no_outlier_Mad, aes(x = power, fill = years.category)) +
geom_histogram(colour = "black") +
geom_density() +
facet_grid(years.category ~ ., scales = "free") +    ###histograma
theme(legend.position = "top")+
labs(fill = "Tramo de edad", x="Potencia (CV)", y = "Número de observaciones")
View(list_country)
model1 <- lm(price ~ years*km*(Iveco+MAN+Mercedes+Otro+Renault+Scania+Volvo), sal[,c(-1)])
# library(data.table)
# library(mltools)
#solo las 8 marcas (para mostrar el resultado del one-hot encoding. --> no para todas las muestras)
sal <- brands[1]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
library(data.table)
library(mltools)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("DAF", "Iveco", "MAN", "Mercedes", "Otro", "Renault", "Scania", "Volvo")
onehot
knitr::kable(
head(onehot[, 1:8], 8), format = "latex", booktabs = TRUE,  align = "c",
caption = "\\label{tabla04} Número de cabezas tractoras según el país en que se encuentra."
) %>%
kable_styling(latex_options = c("striped","condensed", "HOLD_position"),
position = "center",
full_width = FALSE)
#relation between price, years and km
my_models <- list()
my_models[['reg_years_price_lineal']]   <- lm(price ~ years * km, data = data_no_outlier_Mad)
my_models[['reg_years_price_exp']]   <- lm(log(price) ~ years * km, data = data_no_outlier_Mad)
my_models[['reg_years_price_power']] <- lm(log(price) ~ log(years) * log(km), data = data_no_outlier_Mad)
stargazer::stargazer(my_models, type = "text",column.labels = c("Modelo1", "Modelo2", "Modelo3"), single.row = TRUE, df=FALSE, omit.stat=c("LL","adj.rsq"), no.space=FALSE,
notes = c(" ---------------------------------------------","*** Significant at the 1 percent level.", "** Significant at the 5 percent level.", "* Significantat the 10 percent level."),
out="Modelos_regresion/Modelos_regresion_multi1.html")
#relation between price, years and km
my_models <- list()
cor(data_no_outlier_Mad$years,data_no_outlier_Mad$km)
library(PerformanceAnalytics)
install.packages("PerformanceAnalytics"")
install.packages("PerformanceAnalytics"")
install.packages("PerformanceAnalytics"")
cor(data_no_outlier_Mad$years,data_no_outlier_Mad$km)
cor(data_no_outlier_Mad$years,data_no_outlier_Mad$km)
install.packages("PerformanceAnalytics")
View(brands)
View(countries)
View(data_no_outlier_Mad)
View(df_brand)
View(onehot)
levels <- c("Otro","DAF", "Iveco", "MAN", "Mercedes",  "Renault", "Scania", "Volvo")
data_no_outlier_Mad$brand_factor <- match(data_no_outlier_Mad$brand, levels)
attach(data_no_outlier_Mad)
scatterplot3d(x=years, y=brand_factor, z=price, pch=16, cex.lab=1,
highlight.3d=TRUE, type="h", xlab='years', ylab='brands', zlab='Price (€)')
# library(data.table)
# library(mltools)
#solo las 8 marcas (para mostrar el resultado del one-hot encoding. --> no para todas las muestras)
sal <- brands[1]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
library(data.table)
library(mltools)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("Otro","DAF", "Iveco", "MAN", "Mercedes",  "Renault", "Scania", "Volvo")
View(onehot)
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[,c(2)]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
sal$brand <- as.factor(sal$brand)
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[,c(2)]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("Otro","DAF", "Iveco", "MAN", "Mercedes",  "Renault", "Scania", "Volvo")
View(onehot)
# library(data.table)
# library(mltools)
#solo las 8 marcas (para mostrar el resultado del one-hot encoding. --> no para todas las muestras)
sal <- brands[1]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
onehot
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[,c(2)]
# library(data.table)
# library(mltools)
#solo las 8 marcas (para mostrar el resultado del one-hot encoding. --> no para todas las muestras)
sal <- brands[1]
View(sal)
View(data_no_outlier_Mad)
View(brands)
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[2]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("Otro","DAF", "Iveco", "MAN", "Mercedes",  "Renault", "Scania", "Volvo")
View(onehot)
sal <- cbind(data_no_outlier_Mad[,c(1,6,7,9)], onehot)
#relation between price, years, brand and km, esto vendría a ser lo que hago despues con el onehot-encoding
my_models <- list()
sal <- cbind(data_no_outlier_Mad[,c(1,6,7,9)], onehot) #sin DAF, ya que si todas las binarias son cero, el modelo predice para DAF
View(sal)
lm(price ~ years * brand, data_no_outlier_Mad)
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[,c(2)]
sal$brand <- as.factor(sal$brand)
#para las 8 marcas, considerando todos los datos
sal <- data_no_outlier_Mad[2]
sal$brand <- as.factor(sal$brand)
onehot <- one_hot(as.data.table(sal))
colnames(onehot) <- c("DAF", "Iveco", "MAN", "Mercedes", "Otro", "Renault", "Scania", "Volvo")
source("~/.active-rstudio-document", echo=TRUE)
knitr::include_url("file:///home/macosma1/Escritorio/MemoriaTFE/MemoriaMACM/Modelos_regresion/Modelos_regresion_multi5.html")
